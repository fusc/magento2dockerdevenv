# download docker desktop : https://www.docker.com/products/docker-desktop/
version: "3.1"
services:

  php-fpm:
    image: ${ALIYUN_CONTAINER_URL}/magento2:php-7.4.33-fpm
    #image: ${ALIYUN_CONTAINER_URL}/magento2:php-7.4.33-fpm-xdebug
    container_name: ${COMPOSE_PROJECT_NAME}_php_fpm
    cap_add:
      - SYS_PTRACE
    restart: always
    volumes:
      - ./.docker/php-fpm/etc/conf.d/php.local.ini:/usr/local/etc/php/php.ini
      - ./.docker/php-fpm/etc/conf.d/00-opcache-recommended.ini:/usr/local/etc/php/conf.d/00-opcache-recommended.ini
      - ./.docker/php-fpm/etc/php-fpm.d/www.local.conf:/usr/local/etc/php-fpm.d/www.conf:ro
      - ./.docker/php-fpm/log:/usr/local/log
      - data-www:/data/www
    dns:
      - 223.5.5.5 #https://www.alidns.com/
      - 119.29.29.29 #https://www.dnspod.cn/Products/Public.DNS
      - 114.114.114.114

  php81-fpm:
    image: ${ALIYUN_CONTAINER_URL}/magento2:php-8.1.27-fpm-alpine3.18
    #image: ${ALIYUN_CONTAINER_URL}/magento2:php-8.1.12-fpm-xdebug
    container_name: ${COMPOSE_PROJECT_NAME}_php81_fpm
    cap_add:
      - SYS_PTRACE
    restart: always
    volumes:
      #- ./.docker/php81-fpm/etc/conf.d/php.ini:/usr/local/etc/php/php.ini:ro
      #- ./.docker/php81-fpm/etc/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro
      #- ./.docker/php81-fpm/etc/conf.d/00-opcache-recommended.ini:/usr/local/etc/php/conf.d/00-opcache-recommended.ini
      - ./.docker/php81-fpm/etc/conf.d/php.local.ini:/usr/local/etc/php/php.ini:ro # for local
      - ./.docker/php81-fpm/etc/php-fpm.d/www.local.conf:/usr/local/etc/php-fpm.d/www.conf:ro # for local
      - ./.docker/php81-fpm/etc/conf.d/00-opcache-recommended.local.ini:/usr/local/etc/php/conf.d/00-opcache-recommended.ini # for local
      #- ./.docker/php81-fpm/etc/conf.d/docker-php-ext-xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini #for local and xdebug
      - ./.docker/php81-fpm/log:/usr/local/log
      - data-www:/data/www
    dns:
      - 223.5.5.5 #https://www.alidns.com/
      - 119.29.29.29 #https://www.dnspod.cn/Products/Public.DNS
      - 114.114.114.114

  php82-fpm:
    image: ${ALIYUN_CONTAINER_URL}/magento2:php-8.2.16-fpm-alpine3.18
    container_name: ${COMPOSE_PROJECT_NAME}_php82_fpm
    cap_add:
      - SYS_PTRACE
    restart: always
    ports:
      - 9002:9001
    volumes:
      - ./.docker/php82-fpm/etc/conf.d/php.local.ini:/usr/local/etc/php/php.ini:ro
      - ./.docker/php82-fpm/etc/conf.d/00-opcache-recommended.ini:/usr/local/etc/php/conf.d/00-opcache-recommended.ini
      - ./.docker/php82-fpm/etc/php-fpm.d/www.local.conf:/usr/local/etc/php-fpm.d/www.conf:ro
      #- ./.docker/php82-fpm/etc/conf.d/docker-php-ext-xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./.docker/php82-fpm/log:/usr/local/log
      - data-www:/data/www
    dns:
      - 223.5.5.5 #https://www.alidns.com/
      - 119.29.29.29 #https://www.dnspod.cn/Products/Public.DNS
      - 114.114.114.114

  nginx:
    image: ${ALIYUN_CONTAINER_URL}/magento2:nginx-1.25.1-alpine3.17
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    restart: always
    ports:
      - 80:80
    depends_on:
      - php-fpm
    volumes:
      - ./.docker/nginx/etc/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.docker/nginx/etc/snippets:/etc/nginx/snippets
      - ./.docker/nginx:/data/nginx:cached
      - data-www:/data/www

  redis:
    image: ${ALIYUN_CONTAINER_URL}/magento2:redis-6.2-alpine3.18
    container_name: ${COMPOSE_PROJECT_NAME}_redis
    restart: always
    stdin_open: true
    tty: true
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

  mysql:
    image: ${ALIYUN_CONTAINER_URL}/magento2:mysql-8.0.30
    container_name: ${COMPOSE_PROJECT_NAME}_mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    security_opt:
      - seccomp:unconfined
    #ports:
    #  - 3306:3306
    volumes:
      - ./.docker/mysql/log:/var/log/mysql
      - mysql-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}

  adminer:
    image: ${ALIYUN_CONTAINER_URL}/magento2:adminer-latest
    container_name: ${COMPOSE_PROJECT_NAME}_adminer
    restart: always
    ports:
      - 8899:8080
    depends_on:
      - mysql
    environment:
      - ADMINER_DEFAULT_SERVER=${ADMINER_DEFAULT_SERVER}

  elasticsearch:
    image: ${ALIYUN_CONTAINER_URL}/magento2:ES-7.17.3
    container_name: ${COMPOSE_PROJECT_NAME}_es
    restart: always
    environment:
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
      - ./.docker/elasticsearch/plugins/IK/config/IKAnalyzer.cfg.xml:/usr/share/elasticsearch/plugins/elasticsearch-analysis-ik-7.17.3/config/IKAnalyzer.cfg.xml:ro
      - ./.docker/elasticsearch/plugins/IK/config/custom_dict.dic:/usr/share/elasticsearch/plugins/elasticsearch-analysis-ik-7.17.3/config/custom_dict.dic:ro
      - ./.docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./.docker/elasticsearch/config/jvm.options:/usr/share/elasticsearch/config/jvm.options:ro
      - ./.docker/elasticsearch/logs:/usr/share/elasticsearch/logs

  elasticsearch-kibana:
    image: registry.cn-shanghai.aliyuncs.com/ulooocom/magento2:kibana-7.17.3
    container_name: ${COMPOSE_PROJECT_NAME}_kibana
    restart: always
    ports:
      - "5601:5601"
    volumes:
      - ./.docker/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml

  mq:
    image: ${ALIYUN_CONTAINER_URL}/magento2:rabbitmq-3.9.18-alpine
    container_name: ${COMPOSE_PROJECT_NAME}_mq
    restart: always
    volumes:
      - data-rabbitmq:/var/lib/rabbitmq
    dns:
      - 223.5.5.5 #https://www.alidns.com/
      - 119.29.29.29 #https://www.dnspod.cn/Products/Public.DNS
      - 114.114.114.114

  mq_management:
    image: ${ALIYUN_CONTAINER_URL}/magento2:rabbitmq-3.9.18-management
    container_name: ${COMPOSE_PROJECT_NAME}_mq_management
    ports:
      - "15672:15672"
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    dns:
      - 223.5.5.5 #https://www.alidns.com/
      - 119.29.29.29 #https://www.dnspod.cn/Products/Public.DNS
      - 114.114.114.114

  sshd_ubuntu:
    image: ${ALIYUN_CONTAINER_URL}/magento2:sshd-ubuntu-22.04
    container_name: ${COMPOSE_PROJECT_NAME}_sshd_ubuntu
    #entrypoint: ["sudo", "/usr/sbin/sshd", "-De", "-p", "22"]
    ports:
      - "52233:22"
      - "3333:22"
    restart: always
    volumes:
      - ubuntu-www-data-ssh:/home/www-data/.ssh
      # in windows, need to go container(./wingo ubuntu)
      # sudo chmod 755 /home/www-data/.ssh
      # sudo chmod 644 /home/www-data/.ssh/authorized_keys
      # sudo chown -R www-data:www-data authorized_keys
      # at the first time.
      - data-www:/data/www
    #extra_hosts:
    #  - "www.ulooo.com:100.100.100.100"
    dns:
      - 223.5.5.5 #https://www.alidns.com/
      - 119.29.29.29 #https://www.dnspod.cn/Products/Public.DNS
      - 114.114.114.114

  code-server:
    image: registry.cn-shanghai.aliyuncs.com/ulooocom/magento2:code-server
    container_name: ${COMPOSE_PROJECT_NAME}_code_server
    environment:
      - DOCKER_USER:www-data
    user: 1000:1000
    ports:
      - "9901:8080"
    restart: always
    volumes:
      - ./.docker/code-server/.config:/home/coder/.config
      - data-www:/data/www
    dns:
      - 223.5.5.5 #https://www.alidns.com/
      - 119.29.29.29 #https://www.dnspod.cn/Products/Public.DNS
      - 114.114.114.114

volumes:
  mysql-data:
  data-www:
  data-rabbitmq:
  elasticsearch-data:
  ubuntu-www-data-ssh:
